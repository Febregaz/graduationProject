<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="yuzhaoLiu.project.mybatis.mapper.topic.content.topicsMapper"><!-- 这里namespace必须是UserMapper接口的路径” -->

    <resultMap id="topicsBean" type="yuzhaoLiu.project.mybatis.entity.topic.content.Topics">
        <id column="id" property="id" />
        <result column="title" property="title" />
        <result column="content" property="content" />
        <result column="comment_count_topic" property="countCommentTopic" />
        <result column="nice_topic" property="niceTopic" />
        <result column="topic_time" property="topicTime" />
        <result column="integral" property="integral" />
        <result column="status" property="status" />

        <!--property与实体类中的对应字段名必须相同-->
        <association property="topicsType" javaType="yuzhaoLiu.project.mybatis.entity.topic.category.Types">
            <id column="idd" property="idd" />
            <result column="name" property="name" />
            <result column="count_topics" property="countTopics" />
            <result column="count_comments" property="countComments" />
            <association property="typesCategory" javaType="yuzhaoLiu.project.mybatis.entity.topic.category.Categorys">
                <id column="categoryId" property="categoryId" />
                <result column="namee" property="namee" />
                <result column="count_topics_cate" property="countTopicsCate" />
                <result column="count_comments_cate" property="countCommentsCate" />
            </association>
        </association>
        <association property="topicsUser" javaType="yuzhaoLiu.project.mybatis.entity.people.Users">
            <result column="userId" property="userId" />
            <result column="nickname" property="nickname" /><!--需要哪个字段的值就写哪个字段，不用全部写出来-->
            <result column="picture" property="picture"/>
            <result column="clock" property="clock" />
            <association property="usersGrade" javaType="yuzhaoLiu.project.mybatis.entity.people.Grades">
                <id column="gradeId" property="gradeId" />
                <result column="honor" property="honor"></result>
            </association>
        </association>
    </resultMap>

    <select id="readTopics" resultMap="topicsBean">
        SELECT a.*,b.*,c.*,d.* FROM t_topic a,t_type b,t_category c,t_user d WHERE b.idd = a.topics_type_id AND a.topics_user_id = d.userId AND b.types_category_id = c.categoryId AND a.only_user_can_see = 0 ORDER BY  a.id DESC
    </select>
    <select id="getTheNewestTopics" resultMap="topicsBean">
        SELECT a.id,a.title,a.integral,a.comment_count_topic,a.status,a.nice_topic,a.topic_time,a.content,b.idd,b.name,c.namee,c.categoryId,d.userId,d.nickname FROM t_topic a,t_type b,t_category c,t_user d WHERE a.topics_type_id = b.idd AND a.topics_user_id = d.userId AND b.types_category_id = c.categoryId AND a.status != 2 AND a.only_user_can_see = 0 ORDER BY  a.id DESC LIMIT 3000
    </select>
    <select id="getTheHotestTopics" resultMap="topicsBean">
        SELECT a.id,a.title,a.integral,a.comment_count_topic,a.status,a.nice_topic,b.idd,b.name,c.namee,c.categoryId,d.userId,d.nickname FROM t_topic a,t_type b,t_category c,t_user d WHERE a.comment_count_topic >= 3 AND b.idd = a.topics_type_id AND a.topics_user_id = d.userId AND b.types_category_id = c.categoryId AND a.status != 2 AND a.only_user_can_see = 0 ORDER BY a.comment_count_topic DESC LIMIT 3000
    </select>
    <select id="getTheNicestTopics" resultMap="topicsBean">
        SELECT a.id,a.title,a.integral,a.comment_count_topic,a.status,a.nice_topic,b.idd,b.name,c.namee,c.categoryId,d.userId,d.nickname FROM t_topic a,t_type b,t_category c,t_user d WHERE a.nice_topic = 1 AND b.idd = a.topics_type_id AND a.topics_user_id = d.userId AND b.types_category_id = c.categoryId AND a.status != 2 AND a.only_user_can_see = 0 ORDER BY a.id DESC LIMIT 3000
    </select>
    <select id="getTheTopicById" parameterType="int" resultMap="topicsBean">
        SELECT a.*,b.*,c.*,d.*,e.* FROM t_topic a,t_type b,t_category c,t_user d,t_grade e WHERE a.id = #{id} AND b.idd = a.topics_type_id AND a.topics_user_id = d.userId AND b.types_category_id = c.categoryId AND d.users_grade_id = e.gradeId AND a.only_user_can_see = 0
    </select>
    <select id="getTopicsByTypeId" parameterType="int" resultMap="topicsBean">
        SELECT a.*,b.*,c.*,d.*,e.* FROM t_topic a,t_type b,t_category c,t_user d,t_grade e WHERE a.topics_type_id = #{id} AND b.idd = #{id} AND d.userId = a.topics_user_id AND b.types_category_id = c.categoryId AND a.status != 2 AND a.only_user_can_see = 0
    </select>
    <select id="getAllHotTopics" resultMap="topicsBean">
        SELECT a.*,b.*,c.*,d.* FROM t_topic a,t_type b,t_category c,t_user d WHERE a.comment_count_topic >= 3 AND b.idd = a.topics_type_id AND b.types_category_id = c.categoryId AND a.topics_user_id = d.userId AND a.status != 2 AND a.only_user_can_see = 0 ORDER BY a.comment_count_topic DESC
    </select>
    <select id="getAllFreshTopics" resultMap="topicsBean">
        SELECT a.*,b.*,c.*,d.* FROM t_topic a,t_type b,t_category c,t_user d WHERE b.idd = a.topics_type_id AND b.types_category_id = c.categoryId AND a.topics_user_id = d.userId AND a.status != 2 AND a.only_user_can_see = 0 ORDER BY  a.id DESC
    </select>
    <select id="getAllNiceTopics" resultMap="topicsBean">
        SELECT a.*,b.*,c.*,d.* FROM t_topic a,t_type b,t_category c,t_user d WHERE a.nice_topic = 1 AND b.idd = a.topics_type_id AND b.types_category_id = c.categoryId AND a.topics_user_id = d.userId AND a.status != 2 AND a.only_user_can_see = 0 ORDER BY a.id DESC
    </select>
    <select id="searchTopics" parameterType="String" resultMap="topicsBean" >
        SELECT a.*,b.*,c.*,d.* FROM t_topic a,t_type b,t_category c,t_user d WHERE a.title LIKE "%"#{content}"%" AND b.idd = a.topics_type_id AND b.types_category_id = c.categoryId AND b.idd = a.topics_type_id AND b.types_category_id = c.categoryId AND a.status != 2 AND a.only_user_can_see = 0 OR a.content LIKE "%"#{content}"%" AND b.idd = a.topics_type_id AND b.types_category_id = c.categoryId AND b.idd = a.topics_type_id AND b.types_category_id = c.categoryId AND a.status != 2 AND a.only_user_can_see = 0 ORDER BY a.id DESC
    </select>
    <select id="getTopicsByUserId" parameterType="int" resultMap="topicsBean" >
        SELECT a.*,b.*,c.* FROM t_topic a,t_type b,t_category c WHERE a.topics_user_id = #{id} AND a.topics_type_id = b.idd AND b.types_category_id = c.categoryId AND a.status != 2 AND a.only_user_can_see = 0
    </select>
    <select id="getThePrivateTopic" parameterType="int" resultMap="topicsBean" >
        SELECT a.*,b.*,c.* FROM t_topic a,t_type b,t_category c WHERE a.topics_user_id = #{id} AND a.topics_type_id = b.idd AND b.types_category_id = c.categoryId AND a.status != 2 AND a.only_user_can_see = #{id} ORDER BY a.topic_time DESC
    </select>
    <select id="getPrivateTopic" parameterType="int" resultMap="topicsBean">
        SELECT a.*,b.*,c.*,d.*,e.* FROM t_topic a,t_type b,t_category c,t_user d,t_grade e WHERE a.id = #{0} AND b.idd = a.topics_type_id AND a.topics_user_id = d.userId AND b.types_category_id = c.categoryId AND d.users_grade_id = e.gradeId AND a.status!=2 AND a.only_user_can_see = #{1}
    </select>

    <update id="updateTopicComment">
        UPDATE t_topic a SET a.comment_count_topic = #{1} WHERE a.id = #{0}
    </update>
    <update id="updateTopicStatus">
        UPDATE t_topic a SET a.status = #{status} WHERE a.id = #{id}
    </update>
    <update id="updateTopicNice" parameterType="Topics">
        UPDATE t_topic a SET a.nice_topic = #{niceTopic} WHERE a.id = #{id}
    </update>
    <update id="deleteTopic">
        UPDATE t_topic a SET a.status = #{status} WHERE a.id = #{id}
    </update>
    <update id="updateTopicCommentCount" parameterType="Topics">
        UPDATE t_topic a SET a.comment_count_topic = #{countCommentTopic} WHERE a.id = #{id}
    </update>

    <insert id="addTopic" parameterType="Topics" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_topic(title , content , comment_count_topic , nice_topic , topic_time , integral , status ,topics_user_id ,topics_type_id , only_user_can_see) VALUES (#{title} , #{content} , #{countCommentTopic} , #{niceTopic} , #{topicTime} , #{integral} , #{status} ,#{topicsUser.userId} ,#{topicsType.idd} , #{onlyUserCanSee})
    </insert>

    <cache eviction="LRU" flushInterval="60000" size="512" readOnly="true" />
</mapper>